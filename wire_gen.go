// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package armor

import (
	"github.com/google/wire"
	"github.com/zedisdog/armor/app"
	"github.com/zedisdog/armor/cache"
	"github.com/zedisdog/armor/casbin"
	"github.com/zedisdog/armor/config"
	"github.com/zedisdog/armor/model"
	"github.com/zedisdog/armor/queue"
	"github.com/zedisdog/armor/web"
)

// Injectors from wire.go:

func InitApp(config2 string) (*app.Armor, error) {
	viper, err := config.New(config2)
	if err != nil {
		return nil, err
	}
	appQueue := queue.New(viper)
	db, err := model.New(viper)
	if err != nil {
		return nil, err
	}
	options := casbin.NewOptions(viper, db)
	enforcer, err := casbin.New(viper, options)
	if err != nil {
		return nil, err
	}
	client, err := cache.New(viper)
	if err != nil {
		return nil, err
	}
	httpServer, err := web.New(viper)
	if err != nil {
		return nil, err
	}
	armor := app.New(viper, appQueue, enforcer, client, db, httpServer)
	return armor, nil
}

// wire.go:

var ProviderSet = wire.NewSet(config.ProviderSet, model.ProviderSet, web.ProviderSet, queue.ProviderSet, casbin.ProviderSet, cache.ProviderSet, app.ProviderSet)
